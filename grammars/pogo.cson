'fileTypes': [
  'pogo'
]
'name': 'POSO'
'patterns': [
  {
    'include': '#value'
  }
]
'repository':
  'array':
    'begin': '\\['
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.array.begin.json'
    'end': '\\]'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.array.end.json'
    'name': 'meta.structure.array.json'
    'patterns': [
      {
        'include': '#value'
      }
      {
        'match': ','
        'name': 'punctuation.separator.array.json'
      }
      {
        'match': '[^\\s\\]]'
        'name': 'invalid.illegal.expected-array-separator.json'
      }
    ]
  'constant':
    'match': '\\b(?:true|false|null)\\b'
    'name': 'constant.language.json'
  'number':
    'comment': 'handles integer and decimal numbers'
    'match': '-?(?=[1-9]|0(?!\\d))\\d+(\\.\\d+)?([eE][+-]?\\d+)?'
    'name': 'constant.numeric.json'
  'object':
    'begin': '\\{'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.dictionary.begin.json'
    'comment': 'a JSON object'
    'end': '\\}'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.dictionary.end.json'
    'name': 'meta.structure.dictionary.json'
    'patterns': [
      {
        'begin': '"posoType"'
        'beginCaptures':
          '0':
            'name': 'string.quoted.poso.key.json'
        'end': '(,)|(?=\\})'
        'endCaptures':
          '1':
            'name': 'punctuation.separator.dictionary.pair.json'
        'name': 'meta.structure.dictionary.poso.json'
        'patterns': [
          {
            'match': ':'
            'name': 'punctuation.separator.dictionary.pair.json'
          }
          {
            'match': '"\\b(?:(?!(api|design|trigger)).)*\\b"'
            'name': 'value.json.badposo'
          }
          {
            'include': '#string'
          }
          {
            'match': '[^\\s,]'
            'name': 'invalid.illegal.expected-dictionary-separator.json'
          }
        ]
      }
      {
        'comment': 'the JSON object key'
        'include': '#posoKeyString'
      }
      {
        'begin': ':'
        'beginCaptures':
          '0':
            'name': 'punctuation.separator.dictionary.key-value.json'
        'end': '(,)|(?=\\})'
        'endCaptures':
          '1':
            'name': 'punctuation.separator.dictionary.pair.json'
        'name': 'meta.structure.dictionary.value.json'
        'patterns': [
          {
            'comment': 'the JSON object value'
            'include': '#value'
          }
          {
            'match': '[^\\s,]'
            'name': 'invalid.illegal.expected-dictionary-separator.json'
          }
        ]
      }
      {
        'match': '[^\\s\\}]'
        'name': 'invalid.illegal.expected-dictionary-separator.json'
      }
    ]
  'posoKeyString':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.json'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.json'
    'name': 'string.quoted.double.json'
    'patterns': [
      {
        'match': '\\b(?:(?!(name|posoType|apis|initialContext|steps|notifications|comment)).)*\\b'
        'name': 'value.json.badposo'
      }
      {
        'match': '(?x:                # turn on extended mode\n                     \\\\                # a literal backslash\n                     (?:               # ...followed by...\n                       ["\\\\/bfnrt]     # one of these characters\n                       |               # ...or...\n                       u               # a u\n                       [0-9a-fA-F]{4}  # and four hex digits\n                     )\n                   )'
        'name': 'constant.character.escape.json'
      }
      {
        'match': '\\\\.'
        'name': 'invalid.illegal.unrecognized-string-escape.json'
      }
    ]
  'string':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.json'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.json'
    'name': 'string.quoted.double.json'
    'patterns': [
      {
        'match': '(?x:                # turn on extended mode\n                     \\\\                # a literal backslash\n                     (?:               # ...followed by...\n                       ["\\\\/bfnrt]     # one of these characters\n                       |               # ...or...\n                       u               # a u\n                       [0-9a-fA-F]{4}  # and four hex digits\n                     )\n                   )'
        'name': 'constant.character.escape.json'
      }
      {
        'match': '\\\\.'
        'name': 'invalid.illegal.unrecognized-string-escape.json'
      }
    ]
  'value':
    'comment': 'the \'value\' diagram at http://json.org'
    'patterns': [
      {
        'include': '#constant'
      }
      {
        'include': '#number'
      }
      {
        'include': '#posoType'
      }
      {
        'include': '#string'
      }
      {
        'include': '#array'
      }
      {
        'include': '#object'
      }
    ]
'scopeName': 'source.pogo'
